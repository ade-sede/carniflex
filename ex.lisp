(defvar height (parse-integer (nth 1 *posix-argv*)))
(defvar width (parse-integer (nth 2 *posix-argv*)))
(setq a (make-array '(height width)))
(dotimes (i height)
   (dotimes (j width)
      (setf (aref a i j) (list i 'x j '= (* i j)))
   )
)
(dotimes (i height)
   (dotimes (j width)
      (print (aref a i j))
   )
))
(print height) (print width)
(exit)

(setq N (parse-integer (nth 1 *posix-argv*)))
(setq M (parse-integer (nth 2 *posix-argv*)))
	(setq N_size (/ WIDTH N))
	(setq M_size (/ HEIGHT M))
	(if ( < N_size M_size)
		(setq M_size N_size)
		(setq N_size M_size))